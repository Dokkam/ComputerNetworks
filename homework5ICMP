from socket import *
import os
import sys
import struct
import time
import select
import binascii

ICMP_ECHO_REQUEST = 8

def MyChecksum(hexlist):
    summ=0
    carry=0
    for i in range(0,len(hexlist),2):
        summ+=(hexlist[i]<< 8) + hexlist[i+1]
        carry=summ>>16
        summ=(summ & 0xffff) + carry

    while( summ != (summ & 0xffff)):
        carry=summ>>16
        summ=summ & 0xffffffff + carry


        summ^=0xffff 
    return summ

def checksum(string):
   csum = 0
   countTo = (len(string) // 2) * 2
   count = 0

   while count < countTo:
       thisVal = ord(string[count+1]) *256 + ord(string[count])
       csum = csum + thisVal
       csum = csum & 0xffffffff
       count = count + 2
  
   if countTo < len(string):
       csum = csum +ord(string[len(string) - 1])
       csum = csum & 0xffffffff
  
   csum = (csum >> 16) + (csum & 0xffff)
   csum = csum + (csum >> 16)
   answer = ~csum
   answer = answer & 0xffff
   answer = answer >> 8 | (answer << 8 &0xff00)
   return answer
  
def receiveOnePing(mySocket, ID, timeout, destAddr):
   timeLeft = timeout
  
   while 1:
       startedSelect = time.time()
       whatReady =select.select([mySocket], [], [], timeLeft)
       howLongInSelect = (time.time() -startedSelect)
       if whatReady[0] == []: 
        return "Request timed-out."
  
        timeReceived = time.time()
        recPacket, addr =mySocket.recvfrom(1024)
     
       timeLeft = timeLeft -howLongInSelect
       if timeLeft <= 0:
           return "Request timed out."
  
def sendOnePing(mySocket, destAddr, ID):
  
   myChecksum = 0
  

   header = struct.pack("bbHHh", ICMP_ECHO_REQUEST, 0,myChecksum, ID, 1)
   data = struct.pack("d", time.time())
  

   myChecksum = MyChecksum ([i for i in header] + [i for i in data])
   
   if sys.platform == 'darwin':
        myChecksum = htons(myChecksum)& 0xffff      
   else:
       myChecksum =htons(myChecksum)
      
   header = struct.pack("bbHHh", ICMP_ECHO_REQUEST, 0,myChecksum, ID, 1)
   packet = header + data
  
   mySocket.sendto(packet, (destAddr, 1)) 
  
  
def doOnePing(destAddr, timeout):
   icmp = getprotobyname("icmp")
   mySocket = socket(AF_INET, SOCK_RAW, icmp)
   myID = os.getpid() & 0xFFFF 

   sendOnePing(mySocket, destAddr, myID)
   delay = receiveOnePing(mySocket, myID, timeout,destAddr)
  
   mySocket.close()
   return delay
  
def ping(host, timeout=1):
   dest = gethostbyname(host)
   print("Pinging " + dest + " using Python:")
   print("")
   while 1 :
       delay = doOnePing(dest,timeout)
       print(delay)
       time.sleep(1)
   return delay

ping("192.168.1.1")
